---
title: PM 566 Lab 5
author: Dana Gonzalez
format: html
editor: visual
embed-resources: true
theme: cosmo
---

# Setup in R

```{r}
library(data.table)
library(dtplyr)
library (dplyr)
library(tidyverse)
```

```{r}
stations <- fread("https://noaa-isd-pds.s3.amazonaws.com/isd-history.csv")
stations[, USAF := as.integer(USAF)]

stations[, USAF   := fifelse(USAF == 999999, NA_integer_, USAF)]
stations[, CTRY   := fifelse(CTRY == "", NA_character_, CTRY)]
stations[, STATE  := fifelse(STATE == "", NA_character_, STATE)]

stations <- stations[!is.na(USAF)]

stations[, n := 1:.N, by = .(USAF)]
stations <- stations[n == 1,][, n := NULL]
```

```{r}
stations <- fread("https://noaa-isd-pds.s3.amazonaws.com/isd-history.csv")
stations[, USAF := as.integer(USAF)]

stations[, USAF   := fifelse(USAF == 999999, NA_integer_, USAF)]
stations[, CTRY   := fifelse(CTRY == "", NA_character_, CTRY)]
stations[, STATE  := fifelse(STATE == "", NA_character_, STATE)]

stations <- stations[!is.na(USAF)]

stations[, n := 1:.N, by = .(USAF)]
stations <- stations[n == 1,][, n := NULL]
```

```{r}
if(!file.exists("met_all.gz"))
  download.file(
    url = "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
    destfile = "met_all.gz",
    method = "libcurl",
    timeout = 60
  )
met <- data.table::fread("met_all.gz")

merge(
  x     = met,      
  y     = stations, 
  by.x  = "USAFID",
  by.y  = "USAF", 
  all.x = TRUE,      
  all.y = FALSE
  ) |> nrow()

stations <- stations[!duplicated(stations$USAF), ]

met <- merge(
  x     = met,      
  y     = stations, 
  by.x  = "USAFID",
  by.y  = "USAF", 
  all.x = TRUE,      
  all.y = FALSE
  )
head(met[, c('USAFID', 'WBAN.y', 'STATE')], n = 4)
```

## Question 1: Representative station for the US

What is the median station in terms of temperature, wind speed, and atmospheric pressure? Look for the three weather stations that best represent continental US using the `quantile()` function. Do these three coincide?

```{r}
quantiles_temp <- quantile(met$temp, na.rm = TRUE)
quantiles_wind <- quantile(met$wind.sp, na.rm = TRUE)
quantiles_pressure <- quantile(met$atm.press, na.rm = TRUE)

quantiles_df <- data.frame(
  metric = rep(c("Temperature", "Wind Speed", "Pressure"), each = length(quantiles_temp)),
  quantile = rep(names(quantiles_temp), times = 3),
  value = c(quantiles_temp, quantiles_wind, quantiles_pressure))

quantiles_df
```
```{r}
any(duplicated(names(met)))
names(met) <- make.unique(names(met))
```

```{r}
median_temp <- met %>% filter(temp == 23.5)
median(median_temp$USAFID)

median_wind <- met %>% filter(wind.sp == 2.1)
median(median_wind$USAFID)

median_pressure <- met %>% filter(atm.press == 1014.1)
median(median_pressure$USAFID)

```

The median stations in the US for temperature, wind speed, and atmospheric pressure are as follows: 722171, 722860, and 723564, respectively.

## Question 2: Representative station per state

Just like the previous question, you are asked to identify what is the most representative, the median, station per state. This time, instead of looking at one variable at a time, look at the euclidean distance. If multiple stations show in the median, select the one located at the lowest latitude.

```{r}
state_median_temp <- met %>%
  group_by(STATE) %>%
  summarize(median_temp = median(temp, na.rm = TRUE), .groups = 'drop')

state_median_temp

state_median_temp_usafid <- met %>%
  inner_join(state_median_temp, by = "STATE") %>%
  filter(temp == median_temp) %>%
  group_by(STATE) %>%
  summarize(median_usafid = median(USAFID, na.rm = TRUE), .groups = 'drop')

state_median_temp_usafid
```

```{r}
state_median_wind <- met %>%
  group_by(STATE) %>%
  summarize(median_wind = median(wind.sp, na.rm = TRUE), .groups = 'drop')

state_median_wind

state_median_wind_usafid <- met %>%
  inner_join(state_median_wind, by = "STATE") %>%
  filter(wind.sp == median_wind) %>%
  group_by(STATE) %>%
  summarize(median_usafid = median(USAFID, na.rm = TRUE), .groups = 'drop')

state_median_wind_usafid
```

```{r}
state_median_pressure <- met %>%
  group_by(STATE) %>%
  summarize(median_pressure = median(atm.press, na.rm = TRUE), .groups = 'drop')

state_median_pressure

state_median_pressure_usafid <- met %>%
  inner_join(state_median_pressure, by = "STATE") %>%
  filter(atm.press == median_pressure) %>%
  group_by(STATE) %>%
  summarize(median_usafid = floor(median(USAFID, na.rm = TRUE)), .groups = 'drop')

state_median_pressure_usafid
```

## Question 3: In the middle?

For each state, identify what is the station that is closest to the mid-point of the state. Combining these with the stations you identified in the previous question, use `leaflet()` to visualize all \~100 points in the same figure, applying different colors for those identified in this question.

```{r}
library(leaflet)
median_temp2 <- (unique(median_temp[,c("LAT","LON")])) 
leaflet(median_temp) |> 
  addProviderTiles('CartoDB.Positron') |> 
  addCircles(lat = ~LAT, lng = ~LON,
             opacity = 1, fillOpacity = 1, radius = 400, color = "lightblue")
```
```{r}
library(leaflet)
median_wind2 <- (unique(median_wind[,c("LAT","LON")])) 
leaflet(median_wind) |> 
  addProviderTiles('CartoDB.Positron') |> 
  addCircles(lat = ~LAT, lng = ~LON,
             opacity = 1, fillOpacity = 1, radius = 400, color = "darkred")
```


```{r}
library(leaflet)
median_pressure2 <- (unique(median_pressure[,c("LAT","LON")])) 
leaflet(median_pressure) |> 
  addProviderTiles('CartoDB.Positron') |> 
  addCircles(lat = ~LAT, lng = ~LON,
             opacity = 1, fillOpacity = 1, radius = 400, color = "goldenrod")
```

```{r}
state_centroids <- median_temp %>%
  group_by(STATE) %>%
  summarise(
    longitude = mean(LON, na.rm = TRUE),
    latitude = mean(LAT, na.rm = TRUE)
  )
state_centroids

library(sf)
state_centroids_sf <- st_as_sf(state_centroids, coords = c("longitude", "latitude"), crs = 4326)
```

```{r}
stations_sf <- st_as_sf(state_centroids, coords = c("longitude", "latitude"), crs = 4326)

closest_stations <- state_centroids_sf %>%
  rowwise() %>%
  mutate(closest_index = {
    distances <- st_distance(geometry, stations_sf)
    which.min(distances)
  }) %>%
  mutate(closest_station = stations_sf[closest_index, ]) %>%
  ungroup() %>%
  select(STATE, closest_station)

closest_stations
```

```{r}
longitude <- st_coordinates(closest_stations)[, 1]
latitude <- st_coordinates(closest_stations)[, 2]

closest_stations2 <- data.frame(stations_sf$STATE, latitude, longitude)
closest_stations2
```
```{r}
library(leaflet)
closest_map <- leaflet() %>%
  addProviderTiles("CartoDB.Positron")
closest_map <- closest_map %>%
  addCircleMarkers(data = closest_stations2,
                   lat = ~latitude,
                   lng = ~longitude,
                   color = "lightblue",
                   radius = 10,
                   stroke = FALSE,
                   fillOpacity = 0.8,
                   label = ~"Closest Station")
closest_map <- closest_map %>%
  addCircleMarkers(data = state_centroids,
                   lat = ~latitude,
                   lng = ~longitude,
                   color = "goldenrod",
                   radius = 5,
                   stroke = FALSE,
                   fillOpacity = 0.8,
                   label = ~"Midpoint")
closest_map <- closest_map %>%
  addLegend(position = "bottomright", 
            colors = c("lightblue", "goldenrod"), 
            labels = c("Closest Station", "Midpoint"),
            title = "Legend")
closest_map

```

## Question 4: Means of means

### States' average temperature.

```{r}
average_temp_by_state <- met %>%
  group_by(STATE) %>%
  summarize(average_temperature = mean(temp, na.rm = TRUE)) %>%
  mutate(Classification = case_when(
    average_temperature < 20 ~ "Low",
    average_temperature >= 20 & average_temperature  < 25 ~ "Mid",
    average_temperature >= 25 ~ "High"
  ))
average_temp_by_state
```
### Number of entries (records)

```{r}
nrow(met)
```

### Number of NA entries

```{r}
total_na <- sum(is.na(met))
total_na
```

### Number of stations

```{r}
unique_stations <- length(unique(met$USAFID))
unique_stations
```

### Number of states included

```{r}
unique_states <- length(unique(met$STATE))
unique_states
```

### Mean temperature

```{r}
mean_temp <- mean(met$temp, na.rm = TRUE)
mean_temp
```

### Mean windspeed

```{r}
mean_wind <- mean(met$wind.sp, na.rm = TRUE)
mean_wind
```

### Mean atmospheric pressure

```{r}
mean_pressure <- mean(met$atm.press, na.rm = TRUE)
mean_pressure
```


### Summary Table by Average Temperature Level

```{r}
met <-met %>%
  mutate(temp_level = cut(temp,
                          breaks = quantile(temp, probs = seq(0, 1, 0.25),  na.rm = TRUE),
                          include.lowest = TRUE,
                          labels = c("Low", "Medium", "High", "Very High")))

state_avg_temp <-met |>
  group_by(STATE) |>
  summarize(
    avg_temp = mean(temp, na.rm = TRUE),
    avg_wind = mean(wind.sp, na.rm = TRUE),
    avg_press = mean(atm.press, na.rm = TRUE),
    num_entries = n(),
    num_na = sum(is.na(temp)),
    .groups = 'drop'
  )

summary_table <- met %>%
  filter(temp_level !="Very High") %>%
  group_by(temp_level) %>%
  summarise(
    number_of_states = n_distinct(STATE),
    mean_temp = mean(temp, na.rm = TRUE),
    mean_wind = mean(wind.sp, na.rm = TRUE),
    mean_pressure = mean(atm.press, na.rm = TRUE))

summary_table
```
